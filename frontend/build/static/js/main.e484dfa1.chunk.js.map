{"version":3,"sources":["components/Login.component.js","components/marriageCard.component.js","service/socket.js","components/userpanel.component.js","components/adminpanel.component.js","components/marriageEvent.component.js","components/Notfound.component.js","components/updateusers.component.js","components/manageevents.component.js","App.js","reportWebVitals.js","index.js"],"names":["Login","state","username","password","isF","inputHandler","bind","submitHandler","event","target","name","value","this","setState","preventDefault","Axios","post","then","data","eid","token","headers","localStorage","setItem","priv","Cookies","set","path","window","location","catch","error","console","log","user","get","getItem","redFlag","class","role","className","onSubmit","type","id","onChange","React","Component","Mcard","props","ev","NameoftheClient","ist","handler","push","to","pathname","onClick","dates","phoneno","address","allocatedBudget","socket","io","UserPanel","upcomingEvents","completedEvents","searchFilter","handleLogOut","socketListerner","e","remove","removeItem","userLoggedin","on","config","Onurl","axios","Curl","all","spread","res","respOn","result","map","resC","ONE","TWO","style","background","backgroundColor","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","Collapse","Body","AdminPanel","Mevent","mevent","expenses","showInput","reason","amount","isSent","isError","handleShow","handleCancel","emit","send_data","marriage_id","url","exp","Smessage","Emessage","total","Tentries","index","val","parseInt","textAlign","scope","Button","variant","Modal","show","onHide","closeButton","Title","NotFound","UpdateUsers","users","inputName","inputUsername","inputPassword","inputPhoneno","inputPriv","handledelete","u","delete","nameOfuser","contactno","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","ManageEvents","OnGoingevents","status","handleComplete","body","off","OTentries","App","exact","component","strict","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e484dfa1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Axios from \"axios\";\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n\r\nimport '../assets/css/login.css';\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isF:false\r\n        }\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    inputHandler(event){\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    submitHandler(event){\r\n        event.preventDefault();\r\n        const url = \"/api/user/login\"\r\n        Axios.post(url, this.state)\r\n            .then((data)=>{\r\n                if(data.data.eid === 10){\r\n                    //user is not logged in\r\n                    this.setState({isF:true})\r\n                }\r\n                if(data.data.eid === 0){\r\n                    //user is succesfully logged in\r\n                    const token = data.headers['x-access-token']\r\n                    localStorage.setItem('token', token);\r\n                    let priv = data.data.priv\r\n\r\n                    //setting up the cookies\r\n                    const cookies = new Cookies();\r\n                    cookies.set('user',{username:this.state.username,priv:priv},{path:\"/\"});\r\n\r\n                    if(priv === \"admin\"){\r\n                        //move to admin panel\r\n                        window.location = \"/adminpanel\"\r\n                    }else{\r\n                        //move to the user panel\r\n                        window.location = \"/userpanel\"\r\n                    }\r\n                    \r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const cookies = new Cookies();\r\n        const user = cookies.get('user');\r\n        const token = localStorage.getItem('token');\r\n        if(token && user){\r\n            if(user.priv === \"admin\") window.location = '/adminpanel';\r\n            else   window.location = '/userpanel';  \r\n        }\r\n    }\r\n\r\n    render(){\r\n        const redFlag = this.state.isF === true ? <div class=\"alert alert-danger\" role=\"alert\">Username or/and Password is/are wrong !!</div> : \"\";\r\n        return(\r\n            <div>\r\n                <div className=\"loginDiv\">\r\n                <h2>Stories by Urban Crew</h2>\r\n                    <form onSubmit={this.submitHandler}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Username</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.inputHandler}/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label  className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={this.inputHandler}/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </form> \r\n                    <br />\r\n                    {redFlag}\r\n                </div>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../assets/css/card.css';\r\n\r\n\r\nexport default class Mcard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id:this.props.ev.id,\r\n            NameoftheClient: this.props.ev.NameoftheClient,\r\n            ist:false\r\n        }\r\n        this.handler = this.handler.bind(this);\r\n    }\r\n    handler(id){\r\n        this.setState({\r\n            NameoftheClient: this.props.ev.NameoftheClient,\r\n            ist:true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.ist === true){\r\n            //redirect the webpage\r\n            return <Redirect push to={{\r\n                pathname: `/marriage/event/${this.state.id}`,\r\n                state: this.props.ev\r\n            }} />\r\n        }else{\r\n            return(\r\n                <div className=\"main-div\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card thread\">\r\n                                <div \r\n                                    className=\"col-sm-10 card-body\" \r\n                                    onClick={()=>this.handler(this.props.ev.id)} >\r\n                                    <div className=\"row\">\r\n                                        <h5 className=\"col-xl-7 card-title\">{this.state.NameoftheClient}</h5>\r\n                                        <p className=\"col-xl-5 card-text\" id=\"date\">{this.props.ev.dates}</p>\r\n                                    </div>\r\n                                    \r\n                                    <p className=\"card-text\">{this.props.ev.phoneno}</p>\r\n                                    <p className=\"card-text\">{this.props.ev.address}</p>\r\n                                    \r\n                                    <p className=\"card-text\">Amount:{this.props.ev.allocatedBudget}</p>\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n    \r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nexport const socket  = io(\"http://localhost:8010\");","import React from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Mcard from './marriageCard.component';\r\nimport '../assets/css/userpanel.css';\r\nimport {socket} from '../service/socket';\r\n\r\nexport default class UserPanel extends React.Component{\r\n    constructor(){\r\n        const cookies = new Cookies();\r\n        const user = cookies.get('user');\r\n        const token = localStorage.getItem('token');\r\n        super();\r\n        this.state = {\r\n            upcomingEvents: [],\r\n            completedEvents: [],\r\n            username: user.username,\r\n            token: token,\r\n            searchFilter:\"\"\r\n        }\r\n        this.handleLogOut = this.handleLogOut.bind(this);\r\n        this.socketListerner = this.socketListerner.bind(this);\r\n    }\r\n\r\n    handleLogOut(e){\r\n        const cookies = new Cookies();\r\n        cookies.remove('user')\r\n        localStorage.removeItem('token')\r\n        this.setState({\r\n            userLoggedin: false\r\n        })\r\n\r\n        window.location = \"/\"\r\n    }\r\n\r\n    socketListerner(){\r\n        socket.on(\"render_admin_eventTable_client\",()=>{\r\n            let config = {\r\n                headers: {\r\n                  'x-access-token': this.state.token,\r\n                }\r\n            }\r\n            const Onurl = axios.get(\"/api/user/main/getmarriages/ongoing\",config);\r\n            const Curl =  axios.get(\"/api/user/main/getmarriages/completed\",config);\r\n\r\n            axios.all([Onurl,Curl])\r\n                .then(axios.spread((...res)=>{\r\n                    const respOn = res[0].data.result.map((e)=>e);\r\n                    const resC = res[1].data.result.map((e)=>e);\r\n\r\n                    this.setState({\r\n                        upcomingEvents:respOn,\r\n                        completedEvents:resC\r\n                    })\r\n                }))\r\n                .catch((error)=>{\r\n                    console.log(error);\r\n                })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        //status 0: ongoing, 1:completed\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n\r\n        this.socketListerner();\r\n\r\n        const Onurl = axios.get(\"/api/user/main/getmarriages/ongoing\",config);\r\n        const Curl =  axios.get(\"/api/user/main/getmarriages/completed\",config);\r\n\r\n        axios.all([Onurl,Curl])\r\n            .then(axios.spread((...res)=>{\r\n                const respOn = res[0].data.result.map((e)=>e);\r\n                const resC = res[1].data.result.map((e)=>e);\r\n\r\n                this.setState({\r\n                    upcomingEvents:respOn,\r\n                    completedEvents:resC\r\n                })\r\n            }))\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const ONE = this.state.upcomingEvents.map((ev)=>{\r\n            return <Mcard key={ev.id} ev={ev} />\r\n        })\r\n\r\n        const TWO = this.state.completedEvents.map((ev)=>{\r\n            return <Mcard key={ev.id} ev={ev} />\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                    <div className=\"m\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <h1 className=\"col-sm-9\">Marriage Schedule</h1>\r\n                                \r\n                                <button className=\"col-sm-3\" id=\"logoutButton\" onClick={this.handleLogOut} style={{background:\"none\",backgroundColor:\"white\"}}>LogOut</button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <br />\r\n                    <Accordion defaultActiveKey=\"0\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <Card style={{}}>\r\n                                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                            <h3>Ongoing/UpComing Events</h3>\r\n                                        </Accordion.Toggle>\r\n                                        <Accordion.Collapse eventKey=\"0\">\r\n                                            <Card.Body>\r\n                                                {ONE}\r\n                                            </Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <Card>\r\n                                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                            <h3>Completed Events</h3>\r\n                                        </Accordion.Toggle>\r\n                                        <Accordion.Collapse eventKey=\"1\">\r\n                                        <Card.Body>\r\n                                            {TWO}\r\n                                        </Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport UserPanel from '../components/userpanel.component';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class AdminPanel extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <UserPanel />\r\n                <Link to=\"/updateUsers\" > Update Users</Link>\r\n                <br/>\r\n                <Link to=\"/manageEvents\" > Manage Events</Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Cookies from 'universal-cookie';\r\nimport {socket} from '../service/socket';\r\n\r\n\r\n\r\nimport '../assets/css/mEvent.css'\r\n\r\nexport default class Mevent extends React.Component{\r\n    constructor(props){\r\n        const cookies = new Cookies();\r\n        const user = cookies.get('user');\r\n\r\n        const token = localStorage.getItem('token');\r\n        super(props);\r\n        this.state = {\r\n            mevent: this.props.location.state,\r\n            expenses: [],\r\n            showInput: false,\r\n            username: user.username,\r\n            token: token,\r\n            reason:\"\",\r\n            amount:\"\",\r\n            isSent: false,\r\n            isError: false\r\n        }\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n    inputHandler(event){\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    handleShow(){\r\n        this.setState({\r\n            showInput: true\r\n        })\r\n    }\r\n    handleCancel(){\r\n        socket.emit('render_mevent');\r\n        this.setState({\r\n            isSent:false,\r\n            isError:false,\r\n            reason:\"\",\r\n            amount:\"\",\r\n            showInput: false\r\n        })\r\n    }\r\n\r\n    submitHandler(event){\r\n        event.preventDefault();\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const send_data = {\r\n            marriage_id: this.state.mevent.id,\r\n            username: this.state.username,\r\n            reason: this.state.reason,\r\n            amount: this.state.amount\r\n        }\r\n\r\n        const url = `/api/user/main/insertexp`;\r\n\r\n        axios.post(url, send_data, config)\r\n            .then((data)=>{\r\n                if(data.data.eid === 0){\r\n                    this.setState({\r\n                        isSent:true\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        isError:true\r\n                    })\r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }    \r\n\r\n\r\n    componentDidMount(){\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n\r\n        socket.on('render_mevent_client',()=>{\r\n            const url = `/api/user/main/getmarriages/gettransaction/${this.state.mevent.id}`;\r\n            axios.get(url,config)\r\n                .then((data)=>{\r\n                    this.setState({\r\n                        expenses: data.data.result.map((exp)=> exp)\r\n                    })\r\n                })\r\n                .catch((error)=>{\r\n                    console.log(error)\r\n                })\r\n        })\r\n\r\n\r\n\r\n\r\n        const url = `/api/user/main/getmarriages/gettransaction/${this.state.mevent.id}`;\r\n        axios.get(url,config)\r\n            .then((data)=>{\r\n                this.setState({\r\n                    expenses: data.data.result.map((exp)=> exp)\r\n                })\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n    render(){\r\n\r\n        const Smessage = this.state.isSent === true?\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n                Succesfully Sent! \r\n            </div>:\"\";\r\n        const Emessage = this.state.isError === true?\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Error in sending, try again\r\n            </div>\r\n        :\"\";\r\n\r\n        let total = 0;\r\n        const Tentries = this.state.expenses.map((exp,index)=>{\r\n            let val = index + 1;\r\n            total = total + parseInt(exp.amount)\r\n            return <tr key={exp.id}>\r\n                        <td>{val}</td>\r\n                        <td>{exp.username}</td>\r\n                        <td>{exp.reason}</td>\r\n                        <td>{exp.amount}</td>\r\n                    </tr>\r\n        })\r\n        return(\r\n            <div>\r\n                <div className=\"m\">\r\n                    <h1>Marriage Event</h1>\r\n                </div>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <h5>{this.state.mevent.NameoftheClient}</h5>\r\n                    <p>{this.state.mevent.phoneno}</p>\r\n                    <p>{this.state.mevent.address}</p>\r\n                    <p id=\"dates\">{this.state.mevent.dates}</p>\r\n                    <p>Amount:&nbsp;{this.state.mevent.allocatedBudget}</p>\r\n                </div>\r\n                \r\n                <br />\r\n                <hr />\r\n\r\n                <h5>Total amount: {total}</h5>\r\n                <div id=\"table-wrapper\">\r\n                    <div id=\"table-scroll\">\r\n                        <table className=\"table\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">s.no</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Utility Reason</th>\r\n                                        <th scope=\"col\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Tentries}\r\n                                </tbody>\r\n                        </table>   \r\n                    </div>\r\n                </div>\r\n                \r\n                <hr />\r\n\r\n                <Button variant=\"primary\" id=\"formbutton\" onClick={this.handleShow}>Add New Entry</Button>\r\n\r\n                <Modal show={this.state.showInput} onHide={this.handleCancel}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>New Entry</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form onSubmit={this.submitHandler}>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Reason</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"username\" name=\"reason\" onChange={this.inputHandler} value={this.state.reason}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Amount</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"amount\" onChange={this.inputHandler} value={this.state.amount}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form> \r\n                        {Smessage}\r\n                        {Emessage}\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h1>404 - Not Found!</h1>\r\n    <Link to=\"/\">\r\n      Go Home\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\nimport {socket} from '../service/socket';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class UpdateUsers extends React.Component{\r\n    constructor(){\r\n        const cookies = new Cookies();\r\n        const user = cookies.get('user');\r\n        const token = localStorage.getItem('token');\r\n        super();\r\n        this.state = {\r\n            username: user.username,\r\n            token: token,\r\n            priv: user.priv,\r\n            users: [],\r\n            showInput: false,\r\n            inputName:\"\",\r\n            inputUsername:\"\",\r\n            inputPassword:\"\",\r\n            inputPhoneno:\"\",\r\n            inputPriv:\"\"\r\n        }\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n        this.handledelete = this.handledelete.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.socketListerner = this.socketListerner.bind(this);\r\n    }\r\n    inputHandler(event){\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    socketListerner(){\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n\r\n        socket.on('render_admin_table_client',()=>{\r\n            const url = \"/api/admin/main/getusers\";\r\n            axios.get(url,config)\r\n                .then((data)=>{\r\n                    this.setState({\r\n                        users: data.data.result.map((u)=> u)\r\n                    })\r\n                })\r\n                .catch((error)=>{\r\n                    console.log(error)\r\n                })\r\n        })\r\n    }\r\n    handleShow(){\r\n        this.setState({\r\n            showInput: true\r\n        })\r\n    }\r\n    handleCancel(){\r\n        socket.emit('render_admin_table');\r\n        this.setState({\r\n            isSent:false,\r\n            isError:false,\r\n            inputName:\"\",\r\n            inputUsername:\"\",\r\n            inputPassword:\"\",\r\n            inputPhoneno:\"\",\r\n            inputPriv:\"\",\r\n            showInput: false\r\n        })\r\n    }\r\n    handledelete(username){\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const url = `/api/admin/main/deleteuser/${username}`\r\n\r\n        axios.delete(url, config)\r\n            .then((data)=>{\r\n                if(data.data.eid === 0){\r\n                    socket.emit('render_admin_table');\r\n                }  \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    submitHandler(event){\r\n        event.preventDefault();\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const send_data = {\r\n            nameOfuser:this.state.inputName,\r\n            username:this.state.inputUsername,\r\n            password:this.state.inputPassword,\r\n            phoneno:this.state.inputPhoneno,\r\n            priv:this.state.inputPriv\r\n        }\r\n        const url = '/api/admin/register'\r\n\r\n        axios.post(url, send_data, config)\r\n            .then((data)=>{\r\n                if(data.data.eid === 0){\r\n                    this.setState({\r\n                        isSent:true\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        isError:true\r\n                    })\r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        \r\n        \r\n        \r\n        if(this.state.priv !== \"admin\"){\r\n            window.location = \"/userpanel\"\r\n        }\r\n\r\n        this.socketListerner();\r\n\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n\r\n        const url = \"/api/admin/main/getusers\";\r\n        axios.get(url,config)\r\n            .then((data)=>{\r\n                this.setState({\r\n                    users: data.data.result.map((u)=> u)\r\n                })\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n    render(){\r\n        const Smessage = this.state.isSent === true?\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n                Succesfully Added! \r\n            </div>:\"\";\r\n        const Emessage = this.state.isError === true?\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Error in Adding the user, try again\r\n            </div>\r\n        :\"\";\r\n        const Tentries = this.state.users.map((user,index)=>{\r\n            let val = index + 1;\r\n            return <tr key={user.username}>\r\n                        <td>{val}</td>\r\n                        <td>{user.username}</td>\r\n                        <td>{user.nameOfuser}</td>\r\n                        <td>{user.contactno}</td>\r\n                        <td>{user.priv}</td>\r\n                        <td>\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <button className=\"dropdown-item dbutton\" onClick={()=> this.handledelete(user.username)}>Delete</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n        })\r\n        return(\r\n            <div>\r\n               <h3>Users database:</h3>\r\n               <hr/>\r\n               <table className=\"table\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">s.no</th>\r\n                                        <th scope=\"col\">username</th>\r\n                                        <th scope=\"col\">Name of the Employee</th>\r\n                                        <th scope=\"col\">Contact</th>\r\n                                        <th scope=\"col\">Privilege</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Tentries}\r\n                                </tbody>\r\n                </table>\r\n\r\n                <hr />\r\n                <Button variant=\"primary\" onClick={this.handleShow}>add</Button>\r\n\r\n                <Modal show={this.state.showInput} onHide={this.handleCancel}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>New Entry</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form onSubmit={this.submitHandler}>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Name of the user:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"username\" name=\"inputName\" onChange={this.inputHandler} value={this.state.inputName}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Username</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"inputUsername\" onChange={this.inputHandler} value={this.state.inputUsername}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Password</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"inputPassword\" onChange={this.inputHandler} value={this.state.inputPassword}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Phone no</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"inputPhoneno\" onChange={this.inputHandler} value={this.state.inputPhoneno}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Privilege</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"inputPriv\" onChange={this.inputHandler} value={this.state.inputPriv}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form> \r\n                        {Smessage}\r\n                        {Emessage}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {socket} from '../service/socket';\r\nimport '../assets/css/manageevents.css';\r\n\r\n\r\nexport default class ManageEvents extends React.Component{\r\n    constructor(){\r\n        const cookies = new Cookies();\r\n        const user = cookies.get('user');\r\n        const token = localStorage.getItem('token');\r\n        super();\r\n        this.state = {\r\n            token: token,\r\n            username: user.username,\r\n            priv: user.priv,\r\n            OnGoingevents:[],\r\n            completedEvents:[],\r\n            isSent:false,\r\n            isError:false,\r\n            NameoftheClient:\"\",\r\n            phoneno:\"\",\r\n            address:\"\",\r\n            dates:\"\",\r\n            allocatedBudget:0,\r\n            status:0\r\n        }\r\n        this.socketListerner = this.socketListerner.bind(this);\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n        this.handledelete = this.handledelete.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.handleComplete = this.handleComplete.bind(this);\r\n    }\r\n    inputHandler(event){\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    handleShow(){\r\n        this.setState({\r\n            showInput: true\r\n        })\r\n    }\r\n    handleCancel(){\r\n        socket.emit('render_admin_eventTable');\r\n        this.setState({\r\n            showInput: false,\r\n            NameoftheClient:\"\",\r\n            phoneno:\"\",\r\n            address:\"\",\r\n            dates:\"\",\r\n            allocatedBudget:0,\r\n            status:0,\r\n            isSent:false,\r\n            isError:false\r\n        })\r\n    }\r\n    handleComplete(id){\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const url = `/api/admin/main/completeEvent`\r\n\r\n        const body = {\r\n            id:id\r\n        }\r\n        axios.post(url,body, config)\r\n            .then((data)=>{\r\n                if(data.data.eid === 0){\r\n                    socket.emit('render_admin_eventTable');\r\n                }  \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n        })\r\n    }\r\n    handledelete(id){\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const url = `/api/admin/main/deleteevent/${id}`\r\n\r\n        axios.delete(url, config)\r\n            .then((data)=>{\r\n                if(data.data.eid === 0){\r\n                    socket.emit('render_admin_eventTable');\r\n                }  \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n    socketListerner(){\r\n        socket.on(\"render_admin_eventTable_client\",()=>{\r\n            let config = {\r\n                headers: {\r\n                  'x-access-token': this.state.token,\r\n                }\r\n            }\r\n            const Onurl = axios.get(\"/api/admin/main/getevents/0\",config);\r\n            const Curl =  axios.get(\"/api/admin/main/getevents/1\",config);\r\n\r\n            axios.all([Onurl,Curl])\r\n                .then(axios.spread((...res)=>{\r\n                    const respOn = res[0].data.result.map((e)=>e);\r\n                    const resC = res[1].data.result.map((e)=>e);\r\n\r\n                    this.setState({\r\n                        OnGoingevents:respOn,\r\n                        completedEvents:resC\r\n                    })\r\n                }))\r\n                .catch((error)=>{\r\n                    console.log(error);\r\n                })\r\n        })\r\n    }\r\n    submitHandler(event){\r\n        event.preventDefault();\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const send_data = {\r\n            NameoftheClient: this.state.NameoftheClient,\r\n            address: this.state.address,\r\n            phoneno: this.state.phoneno,\r\n            allocatedBudget: this.state.allocatedBudget,\r\n            dates: this.state.dates,\r\n            status: this.state.status\r\n        }\r\n\r\n        const url = '/api/admin/main/createEvent';\r\n\r\n        axios.post(url, send_data, config)\r\n            .then((data)=>{\r\n                if(data.data.eid === 0){\r\n                    this.setState({\r\n                        isSent:true\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        isError:true\r\n                    })\r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n    componentWillUnmount(){\r\n        socket.off('render_admin_eventTable_client');\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.priv !== \"admin\"){\r\n            window.location = \"/userpanel\"\r\n        }\r\n        this.socketListerner();\r\n        let config = {\r\n            headers: {\r\n              'x-access-token': this.state.token,\r\n            }\r\n        }\r\n        const Onurl = axios.get(\"/api/admin/main/getevents/0\",config);\r\n        const Curl =  axios.get(\"/api/admin/main/getevents/1\",config);\r\n\r\n        axios.all([Onurl,Curl])\r\n            .then(axios.spread((...res)=>{\r\n                const respOn = res[0].data.result.map((e)=>e);\r\n                const resC = res[1].data.result.map((e)=>e);\r\n\r\n                this.setState({\r\n                    OnGoingevents:respOn,\r\n                    completedEvents:resC\r\n                })\r\n            }))\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            })\r\n\r\n\r\n    }\r\n    render(){\r\n        const Smessage = this.state.isSent === true?\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n                Succesfully Added! \r\n            </div>:\"\";\r\n        const Emessage = this.state.isError === true?\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Error in Adding the user, try again\r\n            </div>\r\n        :\"\";\r\n        const Tentries = this.state.OnGoingevents.map((event,index)=>{\r\n            let val = index + 1;\r\n            return <tr key={event.id}>\r\n                        <td>{val}</td>\r\n                        <td>{event.NameoftheClient}</td>\r\n                        <td>{event.address}</td>\r\n                        <td>{event.phoneno}</td>\r\n                        <td>{event.dates}</td>\r\n                        <td>{event.allocatedBudget}</td>\r\n                        <td>\r\n                            <div className=\"btn-group dropup\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <button className=\"dropdown-item dbutton\" onClick={()=> this.handledelete(event.id)}>Delete</button>\r\n                                    <button className=\"dropdown-item dbutton\" onClick={()=> this.handleComplete(event.id)}>Completed</button>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n        })\r\n        const OTentries = this.state.completedEvents.map((event,index)=>{\r\n            let val = index + 1;\r\n            return <tr key={event.id}>\r\n                        <td>{val}</td>\r\n                        <td>{event.NameoftheClient}</td>\r\n                        <td>{event.address}</td>\r\n                        <td>{event.phoneno}</td>\r\n                        <td>{event.dates}</td>\r\n                        <td>{event.allocatedBudget}</td>\r\n                        <td>\r\n                            <div className=\"btn-group dropup\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <button className=\"dropdown-item dbutton\" onClick={()=> this.handledelete(event.id)}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n        })\r\n        return(\r\n            \r\n            <div>\r\n                <h3>Events database:</h3>\r\n                <hr/>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Card style={{}}>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            <h3>Ongoing/UpComing Events</h3>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <table className=\"table\">\r\n                                    <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">s.no</th>\r\n                                            <th scope=\"col\">Client Name</th>\r\n                                            <th scope=\"col\">address</th>\r\n                                            <th scope=\"col\">Phone Number</th>\r\n                                            <th scope=\"col\">Dates</th>\r\n                                            <th scope=\"col\">Budget</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Tentries}\r\n                                    </tbody>\r\n                                </table>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                            <h3>Completed Events</h3>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                        <Card.Body>\r\n                        <table className=\"table\">\r\n                                    <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">s.no</th>\r\n                                            <th scope=\"col\">Client Name</th>\r\n                                            <th scope=\"col\">address</th>\r\n                                            <th scope=\"col\">Phone Number</th>\r\n                                            <th scope=\"col\">Dates</th>\r\n                                            <th scope=\"col\">Budget</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {OTentries}\r\n                                    </tbody>\r\n                                </table>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n\r\n                </Accordion>\r\n\r\n                <Button variant=\"primary\" onClick={this.handleShow}>add</Button>\r\n\r\n                <Modal show={this.state.showInput} onHide={this.handleCancel}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>New Entry</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form onSubmit={this.submitHandler}>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Name of the client:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"username\" name=\"NameoftheClient\" onChange={this.inputHandler} value={this.state.NameoftheClient}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Phone Number</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"phoneno\" onChange={this.inputHandler} value={this.state.phoneno}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Address</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"address\" onChange={this.inputHandler} value={this.state.address}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Dates</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"dates\" onChange={this.inputHandler} value={this.state.dates}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Allocated Budget</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"allocatedBudget\" onChange={this.inputHandler} value={this.state.allocatedBudget}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label  className=\"form-label\">Status</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"password\" name=\"status\" onChange={this.inputHandler} value={this.state.status}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form> \r\n                        {Smessage}\r\n                        {Emessage}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom';\n\nimport Login from './components/Login.component';\nimport UserPanel from './components/userpanel.component';\nimport AdminPanel from './components/adminpanel.component';\nimport Mevent from './components/marriageEvent.component';\nimport NotFound from './components/Notfound.component';\nimport UpdateUsers from './components/updateusers.component';\nimport ManageEvents from './components/manageevents.component';\n\nfunction App() {\n  return (\n    <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/userpanel\" component={UserPanel} />\n            <Route path=\"/adminpanel\" component={AdminPanel} />\n            <Route strict path=\"/marriage/event/:id\" component={Mevent}/>\n            <Route exact path=\"/updateUsers\" component={UpdateUsers} />\n            <Route exact path=\"/manageEvents\" component={ManageEvents} />\n            <Route component={NotFound} />\n          </Switch>\n    </Router> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}